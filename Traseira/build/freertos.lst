ARM GAS  /tmp/ccc0Ol32.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/freertos.c"
  18              		.section	.text.StartDefaultTask,"ax",%progbits
  19              		.align	1
  20              		.global	StartDefaultTask
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	StartDefaultTask:
  26              	.LFB70:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include "rpm.h"
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccc0Ol32.s 			page 2


  33:Core/Src/freertos.c **** 
  34:Core/Src/freertos.c **** /* USER CODE END PTD */
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  38:Core/Src/freertos.c **** 
  39:Core/Src/freertos.c **** /* USER CODE END PD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  43:Core/Src/freertos.c **** 
  44:Core/Src/freertos.c **** /* USER CODE END PM */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  48:Core/Src/freertos.c **** uint32_t cleber;
  49:Core/Src/freertos.c **** /* USER CODE END Variables */
  50:Core/Src/freertos.c **** /* Definitions for defaultTask */
  51:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  52:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  53:Core/Src/freertos.c ****   .name = "defaultTask",
  54:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  55:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  56:Core/Src/freertos.c **** };
  57:Core/Src/freertos.c **** /* Definitions for CAN_handler */
  58:Core/Src/freertos.c **** osThreadId_t CAN_handlerHandle;
  59:Core/Src/freertos.c **** const osThreadAttr_t CAN_handler_attributes = {
  60:Core/Src/freertos.c ****   .name = "CAN_handler",
  61:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  62:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  63:Core/Src/freertos.c **** };
  64:Core/Src/freertos.c **** /* Definitions for RPM_handler */
  65:Core/Src/freertos.c **** osThreadId_t RPM_handlerHandle;
  66:Core/Src/freertos.c **** const osThreadAttr_t RPM_handler_attributes = {
  67:Core/Src/freertos.c ****   .name = "RPM_handler",
  68:Core/Src/freertos.c ****   .stack_size = 128 * 4,
  69:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityRealtime,
  70:Core/Src/freertos.c **** };
  71:Core/Src/freertos.c **** /* Definitions for CAN_Q */
  72:Core/Src/freertos.c **** osMessageQueueId_t CAN_QHandle;
  73:Core/Src/freertos.c **** const osMessageQueueAttr_t CAN_Q_attributes = {
  74:Core/Src/freertos.c ****   .name = "CAN_Q"
  75:Core/Src/freertos.c **** };
  76:Core/Src/freertos.c **** 
  77:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  79:Core/Src/freertos.c **** 
  80:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  81:Core/Src/freertos.c **** 
  82:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  83:Core/Src/freertos.c **** void Start_CAN_handler(void *argument);
  84:Core/Src/freertos.c **** void Start_RPM_handler(void *argument);
  85:Core/Src/freertos.c **** 
  86:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** /**
  89:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
ARM GAS  /tmp/ccc0Ol32.s 			page 3


  90:Core/Src/freertos.c ****   * @param  None
  91:Core/Src/freertos.c ****   * @retval None
  92:Core/Src/freertos.c ****   */
  93:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  94:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c ****   /* USER CODE END Init */
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  99:Core/Src/freertos.c ****   /* add mutexes, ... */
 100:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 103:Core/Src/freertos.c ****   /* add semaphores, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 107:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* Create the queue(s) */
 111:Core/Src/freertos.c ****   /* creation of CAN_Q */
 112:Core/Src/freertos.c ****   CAN_QHandle = osMessageQueueNew (16, sizeof(uint16_t), &CAN_Q_attributes);
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 115:Core/Src/freertos.c ****   /* add queues, ... */
 116:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c ****   /* Create the thread(s) */
 119:Core/Src/freertos.c ****   /* creation of defaultTask */
 120:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 121:Core/Src/freertos.c **** 
 122:Core/Src/freertos.c ****   /* creation of CAN_handler */
 123:Core/Src/freertos.c ****   CAN_handlerHandle = osThreadNew(Start_CAN_handler, NULL, &CAN_handler_attributes);
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c ****   /* creation of RPM_handler */
 126:Core/Src/freertos.c ****   RPM_handlerHandle = osThreadNew(Start_RPM_handler, NULL, &RPM_handler_attributes);
 127:Core/Src/freertos.c **** 
 128:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 129:Core/Src/freertos.c ****   /* add threads, ... */
 130:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 131:Core/Src/freertos.c **** 
 132:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 133:Core/Src/freertos.c ****   /* add events, ... */
 134:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 135:Core/Src/freertos.c **** 
 136:Core/Src/freertos.c **** }
 137:Core/Src/freertos.c **** 
 138:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 139:Core/Src/freertos.c **** /**
 140:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 141:Core/Src/freertos.c ****   * @param  argument: Not used
 142:Core/Src/freertos.c ****   * @retval None
 143:Core/Src/freertos.c ****   */
 144:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 145:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 146:Core/Src/freertos.c **** {
ARM GAS  /tmp/ccc0Ol32.s 			page 4


  27              		.loc 1 146 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33              		.loc 1 146 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  38              	.LVL1:
  39              	.L2:
 147:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 148:Core/Src/freertos.c ****   /* Infinite loop */
 149:Core/Src/freertos.c ****   for(;;)
  40              		.loc 1 149 3 is_stmt 1 view .LVU2
 150:Core/Src/freertos.c ****   {
 151:Core/Src/freertos.c ****     osDelay(1);
  41              		.loc 1 151 5 discriminator 1 view .LVU3
  42 0002 0120     		movs	r0, #1
  43 0004 FFF7FEFF 		bl	osDelay
  44              	.LVL2:
 149:Core/Src/freertos.c ****   {
  45              		.loc 1 149 3 view .LVU4
  46 0008 FBE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE70:
  50              		.section	.text.Start_CAN_handler,"ax",%progbits
  51              		.align	1
  52              		.global	Start_CAN_handler
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  57              	Start_CAN_handler:
  58              	.LFB71:
 152:Core/Src/freertos.c ****   }
 153:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 154:Core/Src/freertos.c **** }
 155:Core/Src/freertos.c **** 
 156:Core/Src/freertos.c **** /* USER CODE BEGIN Header_Start_CAN_handler */
 157:Core/Src/freertos.c **** /**
 158:Core/Src/freertos.c **** * @brief Function implementing the CAN_handler thread.
 159:Core/Src/freertos.c **** * @param argument: Not used
 160:Core/Src/freertos.c **** * @retval None
 161:Core/Src/freertos.c **** */
 162:Core/Src/freertos.c **** /* USER CODE END Header_Start_CAN_handler */
 163:Core/Src/freertos.c **** void Start_CAN_handler(void *argument)
 164:Core/Src/freertos.c **** {
  59              		.loc 1 164 1 view -0
  60              		.cfi_startproc
  61              		@ Volatile: function does not return.
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              	.LVL3:
  65              		.loc 1 164 1 is_stmt 0 view .LVU6
  66 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccc0Ol32.s 			page 5


  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
  70              	.LVL4:
  71              	.L5:
 165:Core/Src/freertos.c ****   /* USER CODE BEGIN Start_CAN_handler */
 166:Core/Src/freertos.c ****   /* Infinite loop */
 167:Core/Src/freertos.c ****   for(;;)
  72              		.loc 1 167 3 is_stmt 1 view .LVU7
 168:Core/Src/freertos.c ****   {
 169:Core/Src/freertos.c ****     osDelay(1);
  73              		.loc 1 169 5 discriminator 1 view .LVU8
  74 0002 0120     		movs	r0, #1
  75 0004 FFF7FEFF 		bl	osDelay
  76              	.LVL5:
 167:Core/Src/freertos.c ****   {
  77              		.loc 1 167 3 view .LVU9
  78 0008 FBE7     		b	.L5
  79              		.cfi_endproc
  80              	.LFE71:
  82              		.section	.text.Start_RPM_handler,"ax",%progbits
  83              		.align	1
  84              		.global	Start_RPM_handler
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	Start_RPM_handler:
  90              	.LFB72:
 170:Core/Src/freertos.c ****   }
 171:Core/Src/freertos.c ****   /* USER CODE END Start_CAN_handler */
 172:Core/Src/freertos.c **** }
 173:Core/Src/freertos.c **** 
 174:Core/Src/freertos.c **** /* USER CODE BEGIN Header_Start_RPM_handler */
 175:Core/Src/freertos.c **** /**
 176:Core/Src/freertos.c **** * @brief Function implementing the RPM_handler thread.
 177:Core/Src/freertos.c **** * @param argument: Not used
 178:Core/Src/freertos.c **** * @retval None
 179:Core/Src/freertos.c **** */
 180:Core/Src/freertos.c **** /* USER CODE END Header_Start_RPM_handler */
 181:Core/Src/freertos.c **** void Start_RPM_handler(void *argument)
 182:Core/Src/freertos.c **** {
  91              		.loc 1 182 1 view -0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              	.LVL6:
  97              		.loc 1 182 1 is_stmt 0 view .LVU11
  98 0000 08B5     		push	{r3, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
 102              	.LVL7:
 103              	.L8:
 183:Core/Src/freertos.c ****   /* USER CODE BEGIN Start_RPM_handler */
 184:Core/Src/freertos.c ****   /* Infinite loop */
 185:Core/Src/freertos.c ****   for(;;)
ARM GAS  /tmp/ccc0Ol32.s 			page 6


 104              		.loc 1 185 3 is_stmt 1 view .LVU12
 186:Core/Src/freertos.c ****   {
 187:Core/Src/freertos.c ****     osDelay(1);
 105              		.loc 1 187 5 discriminator 1 view .LVU13
 106 0002 0120     		movs	r0, #1
 107 0004 FFF7FEFF 		bl	osDelay
 108              	.LVL8:
 185:Core/Src/freertos.c ****   {
 109              		.loc 1 185 3 view .LVU14
 110 0008 FBE7     		b	.L8
 111              		.cfi_endproc
 112              	.LFE72:
 114              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 115              		.align	1
 116              		.global	MX_FREERTOS_Init
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	MX_FREERTOS_Init:
 122              	.LFB69:
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 123              		.loc 1 93 29 view -0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 08B5     		push	{r3, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 3, -8
 130              		.cfi_offset 14, -4
 112:Core/Src/freertos.c **** 
 131              		.loc 1 112 3 view .LVU16
 112:Core/Src/freertos.c **** 
 132              		.loc 1 112 17 is_stmt 0 view .LVU17
 133 0002 0E4A     		ldr	r2, .L12
 134 0004 0221     		movs	r1, #2
 135 0006 1020     		movs	r0, #16
 136 0008 FFF7FEFF 		bl	osMessageQueueNew
 137              	.LVL9:
 112:Core/Src/freertos.c **** 
 138              		.loc 1 112 15 discriminator 1 view .LVU18
 139 000c 0C4B     		ldr	r3, .L12+4
 140 000e 1860     		str	r0, [r3]
 120:Core/Src/freertos.c **** 
 141              		.loc 1 120 3 is_stmt 1 view .LVU19
 120:Core/Src/freertos.c **** 
 142              		.loc 1 120 23 is_stmt 0 view .LVU20
 143 0010 0C4A     		ldr	r2, .L12+8
 144 0012 0021     		movs	r1, #0
 145 0014 0C48     		ldr	r0, .L12+12
 146 0016 FFF7FEFF 		bl	osThreadNew
 147              	.LVL10:
 120:Core/Src/freertos.c **** 
 148              		.loc 1 120 21 discriminator 1 view .LVU21
 149 001a 0C4B     		ldr	r3, .L12+16
 150 001c 1860     		str	r0, [r3]
 123:Core/Src/freertos.c **** 
 151              		.loc 1 123 3 is_stmt 1 view .LVU22
ARM GAS  /tmp/ccc0Ol32.s 			page 7


 123:Core/Src/freertos.c **** 
 152              		.loc 1 123 23 is_stmt 0 view .LVU23
 153 001e 0C4A     		ldr	r2, .L12+20
 154 0020 0021     		movs	r1, #0
 155 0022 0C48     		ldr	r0, .L12+24
 156 0024 FFF7FEFF 		bl	osThreadNew
 157              	.LVL11:
 123:Core/Src/freertos.c **** 
 158              		.loc 1 123 21 discriminator 1 view .LVU24
 159 0028 0B4B     		ldr	r3, .L12+28
 160 002a 1860     		str	r0, [r3]
 126:Core/Src/freertos.c **** 
 161              		.loc 1 126 3 is_stmt 1 view .LVU25
 126:Core/Src/freertos.c **** 
 162              		.loc 1 126 23 is_stmt 0 view .LVU26
 163 002c 0B4A     		ldr	r2, .L12+32
 164 002e 0021     		movs	r1, #0
 165 0030 0B48     		ldr	r0, .L12+36
 166 0032 FFF7FEFF 		bl	osThreadNew
 167              	.LVL12:
 126:Core/Src/freertos.c **** 
 168              		.loc 1 126 21 discriminator 1 view .LVU27
 169 0036 0B4B     		ldr	r3, .L12+40
 170 0038 1860     		str	r0, [r3]
 136:Core/Src/freertos.c **** 
 171              		.loc 1 136 1 view .LVU28
 172 003a 08BD     		pop	{r3, pc}
 173              	.L13:
 174              		.align	2
 175              	.L12:
 176 003c 00000000 		.word	CAN_Q_attributes
 177 0040 00000000 		.word	CAN_QHandle
 178 0044 00000000 		.word	defaultTask_attributes
 179 0048 00000000 		.word	StartDefaultTask
 180 004c 00000000 		.word	defaultTaskHandle
 181 0050 00000000 		.word	CAN_handler_attributes
 182 0054 00000000 		.word	Start_CAN_handler
 183 0058 00000000 		.word	CAN_handlerHandle
 184 005c 00000000 		.word	RPM_handler_attributes
 185 0060 00000000 		.word	Start_RPM_handler
 186 0064 00000000 		.word	RPM_handlerHandle
 187              		.cfi_endproc
 188              	.LFE69:
 190              		.global	CAN_Q_attributes
 191              		.section	.rodata.str1.4,"aMS",%progbits,1
 192              		.align	2
 193              	.LC0:
 194 0000 43414E5F 		.ascii	"CAN_Q\000"
 194      5100
 195              		.section	.rodata.CAN_Q_attributes,"a"
 196              		.align	2
 199              	CAN_Q_attributes:
 200 0000 00000000 		.word	.LC0
 201 0004 00000000 		.space	20
 201      00000000 
 201      00000000 
 201      00000000 
ARM GAS  /tmp/ccc0Ol32.s 			page 8


 201      00000000 
 202              		.global	CAN_QHandle
 203              		.section	.bss.CAN_QHandle,"aw",%nobits
 204              		.align	2
 207              	CAN_QHandle:
 208 0000 00000000 		.space	4
 209              		.global	RPM_handler_attributes
 210              		.section	.rodata.str1.4
 211 0006 0000     		.align	2
 212              	.LC1:
 213 0008 52504D5F 		.ascii	"RPM_handler\000"
 213      68616E64 
 213      6C657200 
 214              		.section	.rodata.RPM_handler_attributes,"a"
 215              		.align	2
 218              	RPM_handler_attributes:
 219 0000 08000000 		.word	.LC1
 220 0004 00000000 		.space	16
 220      00000000 
 220      00000000 
 220      00000000 
 221 0014 00020000 		.word	512
 222 0018 30000000 		.word	48
 223 001c 00000000 		.space	8
 223      00000000 
 224              		.global	RPM_handlerHandle
 225              		.section	.bss.RPM_handlerHandle,"aw",%nobits
 226              		.align	2
 229              	RPM_handlerHandle:
 230 0000 00000000 		.space	4
 231              		.global	CAN_handler_attributes
 232              		.section	.rodata.str1.4
 233              		.align	2
 234              	.LC2:
 235 0014 43414E5F 		.ascii	"CAN_handler\000"
 235      68616E64 
 235      6C657200 
 236              		.section	.rodata.CAN_handler_attributes,"a"
 237              		.align	2
 240              	CAN_handler_attributes:
 241 0000 14000000 		.word	.LC2
 242 0004 00000000 		.space	16
 242      00000000 
 242      00000000 
 242      00000000 
 243 0014 00020000 		.word	512
 244 0018 18000000 		.word	24
 245 001c 00000000 		.space	8
 245      00000000 
 246              		.global	CAN_handlerHandle
 247              		.section	.bss.CAN_handlerHandle,"aw",%nobits
 248              		.align	2
 251              	CAN_handlerHandle:
 252 0000 00000000 		.space	4
 253              		.global	defaultTask_attributes
 254              		.section	.rodata.str1.4
 255              		.align	2
ARM GAS  /tmp/ccc0Ol32.s 			page 9


 256              	.LC3:
 257 0020 64656661 		.ascii	"defaultTask\000"
 257      756C7454 
 257      61736B00 
 258              		.section	.rodata.defaultTask_attributes,"a"
 259              		.align	2
 262              	defaultTask_attributes:
 263 0000 20000000 		.word	.LC3
 264 0004 00000000 		.space	16
 264      00000000 
 264      00000000 
 264      00000000 
 265 0014 00020000 		.word	512
 266 0018 18000000 		.word	24
 267 001c 00000000 		.space	8
 267      00000000 
 268              		.global	defaultTaskHandle
 269              		.section	.bss.defaultTaskHandle,"aw",%nobits
 270              		.align	2
 273              	defaultTaskHandle:
 274 0000 00000000 		.space	4
 275              		.global	cleber
 276              		.section	.bss.cleber,"aw",%nobits
 277              		.align	2
 280              	cleber:
 281 0000 00000000 		.space	4
 282              		.text
 283              	.Letext0:
 284              		.file 2 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 285              		.file 3 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 286              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccc0Ol32.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
     /tmp/ccc0Ol32.s:19     .text.StartDefaultTask:00000000 $t
     /tmp/ccc0Ol32.s:25     .text.StartDefaultTask:00000000 StartDefaultTask
     /tmp/ccc0Ol32.s:51     .text.Start_CAN_handler:00000000 $t
     /tmp/ccc0Ol32.s:57     .text.Start_CAN_handler:00000000 Start_CAN_handler
     /tmp/ccc0Ol32.s:83     .text.Start_RPM_handler:00000000 $t
     /tmp/ccc0Ol32.s:89     .text.Start_RPM_handler:00000000 Start_RPM_handler
     /tmp/ccc0Ol32.s:115    .text.MX_FREERTOS_Init:00000000 $t
     /tmp/ccc0Ol32.s:121    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
     /tmp/ccc0Ol32.s:176    .text.MX_FREERTOS_Init:0000003c $d
     /tmp/ccc0Ol32.s:199    .rodata.CAN_Q_attributes:00000000 CAN_Q_attributes
     /tmp/ccc0Ol32.s:207    .bss.CAN_QHandle:00000000 CAN_QHandle
     /tmp/ccc0Ol32.s:262    .rodata.defaultTask_attributes:00000000 defaultTask_attributes
     /tmp/ccc0Ol32.s:273    .bss.defaultTaskHandle:00000000 defaultTaskHandle
     /tmp/ccc0Ol32.s:240    .rodata.CAN_handler_attributes:00000000 CAN_handler_attributes
     /tmp/ccc0Ol32.s:251    .bss.CAN_handlerHandle:00000000 CAN_handlerHandle
     /tmp/ccc0Ol32.s:218    .rodata.RPM_handler_attributes:00000000 RPM_handler_attributes
     /tmp/ccc0Ol32.s:229    .bss.RPM_handlerHandle:00000000 RPM_handlerHandle
     /tmp/ccc0Ol32.s:192    .rodata.str1.4:00000000 $d
     /tmp/ccc0Ol32.s:196    .rodata.CAN_Q_attributes:00000000 $d
     /tmp/ccc0Ol32.s:204    .bss.CAN_QHandle:00000000 $d
     /tmp/ccc0Ol32.s:215    .rodata.RPM_handler_attributes:00000000 $d
     /tmp/ccc0Ol32.s:226    .bss.RPM_handlerHandle:00000000 $d
     /tmp/ccc0Ol32.s:237    .rodata.CAN_handler_attributes:00000000 $d
     /tmp/ccc0Ol32.s:248    .bss.CAN_handlerHandle:00000000 $d
     /tmp/ccc0Ol32.s:259    .rodata.defaultTask_attributes:00000000 $d
     /tmp/ccc0Ol32.s:270    .bss.defaultTaskHandle:00000000 $d
     /tmp/ccc0Ol32.s:280    .bss.cleber:00000000 cleber
     /tmp/ccc0Ol32.s:277    .bss.cleber:00000000 $d

UNDEFINED SYMBOLS
osDelay
osMessageQueueNew
osThreadNew
