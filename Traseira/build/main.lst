ARM GAS  /tmp/cc79kkll.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_GPIO_EXTI_Callback
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LVL0:
  27              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "rpm.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cc79kkll.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** extern itr_eventsHandle;
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** uint32_t rpm_itr[4];
  49:Core/Src/main.c **** uint8_t rpm_counter;
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
  28              		.loc 1 57 48 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  58:Core/Src/main.c ****   switch (GPIO_Pin) {
  32              		.loc 1 58 3 view .LVU1
  33 0000 8028     		cmp	r0, #128
  34 0002 00D0     		beq	.L7
  35 0004 7047     		bx	lr
  36              	.L7:
  57:Core/Src/main.c ****   switch (GPIO_Pin) {
  37              		.loc 1 57 48 is_stmt 0 view .LVU2
  38 0006 38B5     		push	{r3, r4, r5, lr}
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 3, -16
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  59:Core/Src/main.c ****     case GPIO_PIN_7:
  60:Core/Src/main.c ****       rpm_itr[rpm_counter % 4] = HAL_GetTick();
  44              		.loc 1 60 7 is_stmt 1 view .LVU3
  45              		.loc 1 60 27 is_stmt 0 view .LVU4
  46 0008 084C     		ldr	r4, .L8
  47 000a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
  48 000c 05F00305 		and	r5, r5, #3
  49              		.loc 1 60 34 view .LVU5
  50 0010 FFF7FEFF 		bl	HAL_GetTick
  51              	.LVL1:
  52              		.loc 1 60 32 discriminator 1 view .LVU6
  53 0014 064B     		ldr	r3, .L8+4
  54 0016 43F82500 		str	r0, [r3, r5, lsl #2]
ARM GAS  /tmp/cc79kkll.s 			page 3


  61:Core/Src/main.c ****       osEventFlagsSet(itr_eventsHandle, RPM_ITR_FLAG);
  55              		.loc 1 61 7 is_stmt 1 view .LVU7
  56 001a 0121     		movs	r1, #1
  57 001c 054B     		ldr	r3, .L8+8
  58 001e 1868     		ldr	r0, [r3]
  59 0020 FFF7FEFF 		bl	osEventFlagsSet
  60              	.LVL2:
  62:Core/Src/main.c ****       rpm_counter++;
  61              		.loc 1 62 7 view .LVU8
  62              		.loc 1 62 18 is_stmt 0 view .LVU9
  63 0024 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  64 0026 0133     		adds	r3, r3, #1
  65 0028 2370     		strb	r3, [r4]
  63:Core/Src/main.c ****       break;
  66              		.loc 1 63 7 is_stmt 1 view .LVU10
  64:Core/Src/main.c ****   }
  65:Core/Src/main.c **** }
  67              		.loc 1 65 1 is_stmt 0 view .LVU11
  68 002a 38BD     		pop	{r3, r4, r5, pc}
  69              	.L9:
  70              		.align	2
  71              	.L8:
  72 002c 00000000 		.word	rpm_counter
  73 0030 00000000 		.word	rpm_itr
  74 0034 00000000 		.word	itr_eventsHandle
  75              		.cfi_endproc
  76              	.LFE69:
  78              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  79              		.align	1
  80              		.global	HAL_TIM_PeriodElapsedCallback
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	HAL_TIM_PeriodElapsedCallback:
  86              	.LVL3:
  87              	.LFB72:
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /**
  74:Core/Src/main.c ****   * @brief  The application entry point.
  75:Core/Src/main.c ****   * @retval int
  76:Core/Src/main.c ****   */
  77:Core/Src/main.c **** int main(void)
  78:Core/Src/main.c **** {
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/cc79kkll.s 			page 4


  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   MX_CAN_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Init scheduler */
 108:Core/Src/main.c ****   osKernelInitialize();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 111:Core/Src/main.c ****   MX_FREERTOS_Init();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Start scheduler */
 114:Core/Src/main.c ****   osKernelStart();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 139:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /tmp/cc79kkll.s 			page 5


 144:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c **** }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /* USER CODE END 4 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 174:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 175:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 176:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 177:Core/Src/main.c ****   * @param  htim : TIM handle
 178:Core/Src/main.c ****   * @retval None
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 181:Core/Src/main.c **** {
  88              		.loc 1 181 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		.loc 1 181 1 is_stmt 0 view .LVU13
  93 0000 08B5     		push	{r3, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
 182:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 185:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  97              		.loc 1 185 3 is_stmt 1 view .LVU14
  98              		.loc 1 185 11 is_stmt 0 view .LVU15
  99 0002 0268     		ldr	r2, [r0]
 100              		.loc 1 185 6 view .LVU16
 101 0004 034B     		ldr	r3, .L14
 102 0006 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc79kkll.s 			page 6


 103 0008 00D0     		beq	.L13
 104              	.LVL4:
 105              	.L10:
 186:Core/Src/main.c ****     HAL_IncTick();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 191:Core/Src/main.c **** }
 106              		.loc 1 191 1 view .LVU17
 107 000a 08BD     		pop	{r3, pc}
 108              	.LVL5:
 109              	.L13:
 186:Core/Src/main.c ****     HAL_IncTick();
 110              		.loc 1 186 5 is_stmt 1 view .LVU18
 111 000c FFF7FEFF 		bl	HAL_IncTick
 112              	.LVL6:
 113              		.loc 1 191 1 is_stmt 0 view .LVU19
 114 0010 FBE7     		b	.L10
 115              	.L15:
 116 0012 00BF     		.align	2
 117              	.L14:
 118 0014 002C0140 		.word	1073818624
 119              		.cfi_endproc
 120              	.LFE72:
 122              		.section	.text.Error_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	Error_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	Error_Handler:
 130              	.LFB73:
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** void Error_Handler(void)
 198:Core/Src/main.c **** {
 131              		.loc 1 198 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ Volatile: function does not return.
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 199:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 200:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 201:Core/Src/main.c ****   __disable_irq();
 137              		.loc 1 201 3 view .LVU21
 138              	.LBB4:
 139              	.LBI4:
 140              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  /tmp/cc79kkll.s 			page 7


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /tmp/cc79kkll.s 			page 8


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  /tmp/cc79kkll.s 			page 9


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141              		.loc 2 140 27 view .LVU22
 142              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143              		.loc 2 142 3 view .LVU23
 144              		.syntax unified
 145              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 146 0000 72B6     		cpsid i
 147              	@ 0 "" 2
 148              		.thumb
 149              		.syntax unified
 150              	.L17:
 151              	.LBE5:
 152              	.LBE4:
 202:Core/Src/main.c ****   while (1)
 153              		.loc 1 202 3 view .LVU24
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****   }
 154              		.loc 1 204 3 view .LVU25
 202:Core/Src/main.c ****   while (1)
 155              		.loc 1 202 9 view .LVU26
 156 0002 FEE7     		b	.L17
 157              		.cfi_endproc
 158              	.LFE73:
 160              		.section	.text.SystemClock_Config,"ax",%progbits
 161              		.align	1
 162              		.global	SystemClock_Config
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	SystemClock_Config:
 168              	.LFB71:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 169              		.loc 1 134 1 view -0
 170              		.cfi_startproc
ARM GAS  /tmp/cc79kkll.s 			page 10


 171              		@ args = 0, pretend = 0, frame = 64
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 00B5     		push	{lr}
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 14, -4
 176 0002 91B0     		sub	sp, sp, #68
 177              		.cfi_def_cfa_offset 72
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 178              		.loc 1 135 3 view .LVU28
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 179              		.loc 1 135 22 is_stmt 0 view .LVU29
 180 0004 2822     		movs	r2, #40
 181 0006 0021     		movs	r1, #0
 182 0008 06A8     		add	r0, sp, #24
 183 000a FFF7FEFF 		bl	memset
 184              	.LVL7:
 136:Core/Src/main.c **** 
 185              		.loc 1 136 3 is_stmt 1 view .LVU30
 136:Core/Src/main.c **** 
 186              		.loc 1 136 22 is_stmt 0 view .LVU31
 187 000e 0023     		movs	r3, #0
 188 0010 0193     		str	r3, [sp, #4]
 189 0012 0293     		str	r3, [sp, #8]
 190 0014 0393     		str	r3, [sp, #12]
 191 0016 0493     		str	r3, [sp, #16]
 192 0018 0593     		str	r3, [sp, #20]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 193              		.loc 1 141 3 is_stmt 1 view .LVU32
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 194              		.loc 1 141 36 is_stmt 0 view .LVU33
 195 001a 0122     		movs	r2, #1
 196 001c 0692     		str	r2, [sp, #24]
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 197              		.loc 1 142 3 is_stmt 1 view .LVU34
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 198              		.loc 1 142 30 is_stmt 0 view .LVU35
 199 001e 4FF48033 		mov	r3, #65536
 200 0022 0793     		str	r3, [sp, #28]
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 201              		.loc 1 143 3 is_stmt 1 view .LVU36
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 202              		.loc 1 144 3 view .LVU37
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 203              		.loc 1 144 30 is_stmt 0 view .LVU38
 204 0024 0A92     		str	r2, [sp, #40]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 205              		.loc 1 145 3 is_stmt 1 view .LVU39
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 206              		.loc 1 145 34 is_stmt 0 view .LVU40
 207 0026 0222     		movs	r2, #2
 208 0028 0D92     		str	r2, [sp, #52]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 209              		.loc 1 146 3 is_stmt 1 view .LVU41
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 210              		.loc 1 146 35 is_stmt 0 view .LVU42
 211 002a 0E93     		str	r3, [sp, #56]
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/cc79kkll.s 			page 11


 212              		.loc 1 147 3 is_stmt 1 view .LVU43
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 213              		.loc 1 147 32 is_stmt 0 view .LVU44
 214 002c 4FF4E013 		mov	r3, #1835008
 215 0030 0F93     		str	r3, [sp, #60]
 148:Core/Src/main.c ****   {
 216              		.loc 1 148 3 is_stmt 1 view .LVU45
 148:Core/Src/main.c ****   {
 217              		.loc 1 148 7 is_stmt 0 view .LVU46
 218 0032 06A8     		add	r0, sp, #24
 219 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 220              	.LVL8:
 148:Core/Src/main.c ****   {
 221              		.loc 1 148 6 discriminator 1 view .LVU47
 222 0038 80B9     		cbnz	r0, .L22
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 223              		.loc 1 155 3 is_stmt 1 view .LVU48
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 224              		.loc 1 155 31 is_stmt 0 view .LVU49
 225 003a 0F23     		movs	r3, #15
 226 003c 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227              		.loc 1 157 3 is_stmt 1 view .LVU50
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 228              		.loc 1 157 34 is_stmt 0 view .LVU51
 229 003e 0221     		movs	r1, #2
 230 0040 0291     		str	r1, [sp, #8]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 231              		.loc 1 158 3 is_stmt 1 view .LVU52
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 232              		.loc 1 158 35 is_stmt 0 view .LVU53
 233 0042 0023     		movs	r3, #0
 234 0044 0393     		str	r3, [sp, #12]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 235              		.loc 1 159 3 is_stmt 1 view .LVU54
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 236              		.loc 1 159 36 is_stmt 0 view .LVU55
 237 0046 4FF48062 		mov	r2, #1024
 238 004a 0492     		str	r2, [sp, #16]
 160:Core/Src/main.c **** 
 239              		.loc 1 160 3 is_stmt 1 view .LVU56
 160:Core/Src/main.c **** 
 240              		.loc 1 160 36 is_stmt 0 view .LVU57
 241 004c 0593     		str	r3, [sp, #20]
 162:Core/Src/main.c ****   {
 242              		.loc 1 162 3 is_stmt 1 view .LVU58
 162:Core/Src/main.c ****   {
 243              		.loc 1 162 7 is_stmt 0 view .LVU59
 244 004e 01A8     		add	r0, sp, #4
 245 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 246              	.LVL9:
 162:Core/Src/main.c ****   {
 247              		.loc 1 162 6 discriminator 1 view .LVU60
 248 0054 20B9     		cbnz	r0, .L23
 166:Core/Src/main.c **** 
 249              		.loc 1 166 1 view .LVU61
 250 0056 11B0     		add	sp, sp, #68
ARM GAS  /tmp/cc79kkll.s 			page 12


 251              		.cfi_remember_state
 252              		.cfi_def_cfa_offset 4
 253              		@ sp needed
 254 0058 5DF804FB 		ldr	pc, [sp], #4
 255              	.L22:
 256              		.cfi_restore_state
 150:Core/Src/main.c ****   }
 257              		.loc 1 150 5 is_stmt 1 view .LVU62
 258 005c FFF7FEFF 		bl	Error_Handler
 259              	.LVL10:
 260              	.L23:
 164:Core/Src/main.c ****   }
 261              		.loc 1 164 5 view .LVU63
 262 0060 FFF7FEFF 		bl	Error_Handler
 263              	.LVL11:
 264              		.cfi_endproc
 265              	.LFE71:
 267              		.section	.text.main,"ax",%progbits
 268              		.align	1
 269              		.global	main
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	main:
 275              	.LFB70:
  78:Core/Src/main.c **** 
 276              		.loc 1 78 1 view -0
 277              		.cfi_startproc
 278              		@ Volatile: function does not return.
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 285              		.loc 1 87 3 view .LVU65
 286 0002 FFF7FEFF 		bl	HAL_Init
 287              	.LVL12:
  94:Core/Src/main.c **** 
 288              		.loc 1 94 3 view .LVU66
 289 0006 FFF7FEFF 		bl	SystemClock_Config
 290              	.LVL13:
 101:Core/Src/main.c ****   MX_CAN_Init();
 291              		.loc 1 101 3 view .LVU67
 292 000a FFF7FEFF 		bl	MX_GPIO_Init
 293              	.LVL14:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 294              		.loc 1 102 3 view .LVU68
 295 000e FFF7FEFF 		bl	MX_CAN_Init
 296              	.LVL15:
 108:Core/Src/main.c **** 
 297              		.loc 1 108 3 view .LVU69
 298 0012 FFF7FEFF 		bl	osKernelInitialize
 299              	.LVL16:
 111:Core/Src/main.c **** 
 300              		.loc 1 111 3 view .LVU70
ARM GAS  /tmp/cc79kkll.s 			page 13


 301 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 302              	.LVL17:
 114:Core/Src/main.c **** 
 303              		.loc 1 114 3 view .LVU71
 304 001a FFF7FEFF 		bl	osKernelStart
 305              	.LVL18:
 306              	.L25:
 120:Core/Src/main.c ****   {
 307              		.loc 1 120 3 view .LVU72
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 308              		.loc 1 125 3 view .LVU73
 120:Core/Src/main.c ****   {
 309              		.loc 1 120 9 view .LVU74
 310 001e FEE7     		b	.L25
 311              		.cfi_endproc
 312              	.LFE70:
 314              		.global	rpm_counter
 315              		.section	.bss.rpm_counter,"aw",%nobits
 318              	rpm_counter:
 319 0000 00       		.space	1
 320              		.global	rpm_itr
 321              		.section	.bss.rpm_itr,"aw",%nobits
 322              		.align	2
 325              	rpm_itr:
 326 0000 00000000 		.space	16
 326      00000000 
 326      00000000 
 326      00000000 
 327              		.text
 328              	.Letext0:
 329              		.file 3 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 330              		.file 4 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 331              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 332              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 333              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 334              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 335              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 336              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 337              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 338              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 339              		.file 13 "Core/Inc/can.h"
 340              		.file 14 "Core/Inc/gpio.h"
 341              		.file 15 "<built-in>"
ARM GAS  /tmp/cc79kkll.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc79kkll.s:19     .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/cc79kkll.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/cc79kkll.s:72     .text.HAL_GPIO_EXTI_Callback:0000002c $d
     /tmp/cc79kkll.s:318    .bss.rpm_counter:00000000 rpm_counter
     /tmp/cc79kkll.s:325    .bss.rpm_itr:00000000 rpm_itr
     /tmp/cc79kkll.s:79     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/cc79kkll.s:85     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc79kkll.s:118    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/cc79kkll.s:123    .text.Error_Handler:00000000 $t
     /tmp/cc79kkll.s:129    .text.Error_Handler:00000000 Error_Handler
     /tmp/cc79kkll.s:161    .text.SystemClock_Config:00000000 $t
     /tmp/cc79kkll.s:167    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc79kkll.s:268    .text.main:00000000 $t
     /tmp/cc79kkll.s:274    .text.main:00000000 main
     /tmp/cc79kkll.s:319    .bss.rpm_counter:00000000 $d
     /tmp/cc79kkll.s:322    .bss.rpm_itr:00000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
osEventFlagsSet
itr_eventsHandle
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
