ARM GAS  /tmp/ccGHjvEO.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_GPIO_EXTI_Callback
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_GPIO_EXTI_Callback:
  26              	.LVL0:
  27              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "rpm.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccGHjvEO.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint32_t rpm_itr[4];
  48:Core/Src/main.c **** uint8_t rpm_counter;
  49:Core/Src/main.c **** uint32_t rpm_last_itr;
  50:Core/Src/main.c **** uint32_t rpm_curr_itr;
  51:Core/Src/main.c **** extern osEventFlagsId_t itr_eventsHandle;
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
  28              		.loc 1 59 48 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  60:Core/Src/main.c ****   switch (GPIO_Pin) {
  32              		.loc 1 60 3 view .LVU1
  33 0000 8028     		cmp	r0, #128
  34 0002 00D0     		beq	.L8
  35 0004 7047     		bx	lr
  36              	.L8:
  59:Core/Src/main.c ****   switch (GPIO_Pin) {
  37              		.loc 1 59 48 is_stmt 0 view .LVU2
  38 0006 70B5     		push	{r4, r5, r6, lr}
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 14, -4
  61:Core/Src/main.c ****     case GPIO_PIN_7:
  62:Core/Src/main.c ****       rpm_curr_itr = osKernelGetTickCount();
  44              		.loc 1 62 7 is_stmt 1 view .LVU3
  45              		.loc 1 62 22 is_stmt 0 view .LVU4
  46 0008 FFF7FEFF 		bl	osKernelGetTickCount
  47              	.LVL1:
  48              		.loc 1 62 20 discriminator 1 view .LVU5
  49 000c 174B     		ldr	r3, .L10
  50 000e 1860     		str	r0, [r3]
  63:Core/Src/main.c ****       rpm_itr[rpm_counter % RPM_SAMPLES] = rpm_curr_itr - rpm_last_itr;
  51              		.loc 1 63 7 is_stmt 1 view .LVU6
ARM GAS  /tmp/ccGHjvEO.s 			page 3


  52              		.loc 1 63 27 is_stmt 0 view .LVU7
  53 0010 174D     		ldr	r5, .L10+4
  54 0012 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  55 0014 174C     		ldr	r4, .L10+8
  56 0016 A4FB0321 		umull	r2, r1, r4, r3
  57 001a 01F0FC02 		and	r2, r1, #252
  58 001e 02EB9102 		add	r2, r2, r1, lsr #2
  59 0022 9B1A     		subs	r3, r3, r2
  60 0024 DBB2     		uxtb	r3, r3
  61              		.loc 1 63 57 view .LVU8
  62 0026 1449     		ldr	r1, .L10+12
  63 0028 0A68     		ldr	r2, [r1]
  64 002a 821A     		subs	r2, r0, r2
  65              		.loc 1 63 42 view .LVU9
  66 002c 134E     		ldr	r6, .L10+16
  67 002e 46F82320 		str	r2, [r6, r3, lsl #2]
  64:Core/Src/main.c ****       rpm_last_itr = rpm_curr_itr;
  68              		.loc 1 64 7 is_stmt 1 view .LVU10
  69              		.loc 1 64 20 is_stmt 0 view .LVU11
  70 0032 0860     		str	r0, [r1]
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
  71              		.loc 1 66 7 is_stmt 1 view .LVU12
  72 0034 4FF40051 		mov	r1, #8192
  73 0038 1148     		ldr	r0, .L10+20
  74 003a FFF7FEFF 		bl	HAL_GPIO_TogglePin
  75              	.LVL2:
  67:Core/Src/main.c ****       //make it so this doesn't clog the can queue;
  68:Core/Src/main.c ****       if ((rpm_counter % RPM_SAMPLES) == 0) osEventFlagsSet(itr_eventsHandle, ITR_RPM_FLAG); 
  76              		.loc 1 68 7 view .LVU13
  77              		.loc 1 68 39 is_stmt 0 view .LVU14
  78 003e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  79 0040 A4FB0324 		umull	r2, r4, r4, r3
  80 0044 04F0FC02 		and	r2, r4, #252
  81 0048 02EB9402 		add	r2, r2, r4, lsr #2
  82 004c 9B1A     		subs	r3, r3, r2
  83              		.loc 1 68 10 view .LVU15
  84 004e 13F0FF0F 		tst	r3, #255
  85 0052 04D0     		beq	.L9
  86              	.L3:
  69:Core/Src/main.c ****       rpm_counter++;
  87              		.loc 1 69 7 is_stmt 1 view .LVU16
  88              		.loc 1 69 18 is_stmt 0 view .LVU17
  89 0054 064A     		ldr	r2, .L10+4
  90 0056 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  91 0058 0133     		adds	r3, r3, #1
  92 005a 1370     		strb	r3, [r2]
  70:Core/Src/main.c ****       break;
  93              		.loc 1 70 7 is_stmt 1 view .LVU18
  71:Core/Src/main.c ****   }
  72:Core/Src/main.c **** }
  94              		.loc 1 72 1 is_stmt 0 view .LVU19
  95 005c 70BD     		pop	{r4, r5, r6, pc}
  96              	.L9:
  68:Core/Src/main.c ****       rpm_counter++;
  97              		.loc 1 68 45 is_stmt 1 discriminator 1 view .LVU20
  98 005e 0121     		movs	r1, #1
ARM GAS  /tmp/ccGHjvEO.s 			page 4


  99 0060 084B     		ldr	r3, .L10+24
 100 0062 1868     		ldr	r0, [r3]
 101 0064 FFF7FEFF 		bl	osEventFlagsSet
 102              	.LVL3:
 103 0068 F4E7     		b	.L3
 104              	.L11:
 105 006a 00BF     		.align	2
 106              	.L10:
 107 006c 00000000 		.word	rpm_curr_itr
 108 0070 00000000 		.word	rpm_counter
 109 0074 CDCCCCCC 		.word	-858993459
 110 0078 00000000 		.word	rpm_last_itr
 111 007c 00000000 		.word	rpm_itr
 112 0080 00100140 		.word	1073811456
 113 0084 00000000 		.word	itr_eventsHandle
 114              		.cfi_endproc
 115              	.LFE69:
 117              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 118              		.align	1
 119              		.global	HAL_TIM_PeriodElapsedCallback
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	HAL_TIM_PeriodElapsedCallback:
 125              	.LVL4:
 126              	.LFB72:
  73:Core/Src/main.c **** /* USER CODE END PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  76:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* USER CODE END 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /**
  81:Core/Src/main.c ****   * @brief  The application entry point.
  82:Core/Src/main.c ****   * @retval int
  83:Core/Src/main.c ****   */
  84:Core/Src/main.c **** int main(void)
  85:Core/Src/main.c **** {
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  88:Core/Src/main.c ****   /* USER CODE END 1 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  93:Core/Src/main.c ****   HAL_Init();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END Init */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Configure the system clock */
 100:Core/Src/main.c ****   SystemClock_Config();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 103:Core/Src/main.c **** 
ARM GAS  /tmp/ccGHjvEO.s 			page 5


 104:Core/Src/main.c ****   /* USER CODE END SysInit */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Initialize all configured peripherals */
 107:Core/Src/main.c ****   MX_GPIO_Init();
 108:Core/Src/main.c ****   MX_CAN_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Init scheduler */
 114:Core/Src/main.c ****   osKernelInitialize();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 117:Core/Src/main.c ****   MX_FREERTOS_Init();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Start scheduler */
 120:Core/Src/main.c ****   osKernelStart();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Infinite loop */
 125:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****   while (1)
 127:Core/Src/main.c ****   {
 128:Core/Src/main.c ****     /* USER CODE END WHILE */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c ****   /* USER CODE END 3 */
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****   * @brief System Clock Configuration
 137:Core/Src/main.c ****   * @retval None
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c **** void SystemClock_Config(void)
 140:Core/Src/main.c **** {
 141:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 145:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 146:Core/Src/main.c ****   */
 147:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
ARM GAS  /tmp/ccGHjvEO.s 			page 6


 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /* USER CODE END 4 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 180:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 181:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 182:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 183:Core/Src/main.c ****   * @param  htim : TIM handle
 184:Core/Src/main.c ****   * @retval None
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 187:Core/Src/main.c **** {
 127              		.loc 1 187 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		.loc 1 187 1 is_stmt 0 view .LVU22
 132 0000 08B5     		push	{r3, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
 188:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 191:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 136              		.loc 1 191 3 is_stmt 1 view .LVU23
 137              		.loc 1 191 11 is_stmt 0 view .LVU24
 138 0002 0268     		ldr	r2, [r0]
 139              		.loc 1 191 6 view .LVU25
 140 0004 034B     		ldr	r3, .L16
 141 0006 9A42     		cmp	r2, r3
 142 0008 00D0     		beq	.L15
 143              	.LVL5:
 144              	.L12:
 192:Core/Src/main.c ****     HAL_IncTick();
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 197:Core/Src/main.c **** }
 145              		.loc 1 197 1 view .LVU26
 146 000a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccGHjvEO.s 			page 7


 147              	.LVL6:
 148              	.L15:
 192:Core/Src/main.c ****     HAL_IncTick();
 149              		.loc 1 192 5 is_stmt 1 view .LVU27
 150 000c FFF7FEFF 		bl	HAL_IncTick
 151              	.LVL7:
 152              		.loc 1 197 1 is_stmt 0 view .LVU28
 153 0010 FBE7     		b	.L12
 154              	.L17:
 155 0012 00BF     		.align	2
 156              	.L16:
 157 0014 002C0140 		.word	1073818624
 158              		.cfi_endproc
 159              	.LFE72:
 161              		.section	.text.Error_Handler,"ax",%progbits
 162              		.align	1
 163              		.global	Error_Handler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	Error_Handler:
 169              	.LFB73:
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 201:Core/Src/main.c ****   * @retval None
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c **** void Error_Handler(void)
 204:Core/Src/main.c **** {
 170              		.loc 1 204 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ Volatile: function does not return.
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 205:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 206:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 207:Core/Src/main.c ****   __disable_irq();
 176              		.loc 1 207 3 view .LVU30
 177              	.LBB4:
 178              	.LBI4:
 179              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccGHjvEO.s 			page 8


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccGHjvEO.s 			page 9


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/ccGHjvEO.s 			page 10


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 180              		.loc 2 140 27 view .LVU31
 181              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 182              		.loc 2 142 3 view .LVU32
 183              		.syntax unified
 184              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 185 0000 72B6     		cpsid i
 186              	@ 0 "" 2
 187              		.thumb
 188              		.syntax unified
 189              	.L19:
 190              	.LBE5:
 191              	.LBE4:
 208:Core/Src/main.c ****   while (1)
 192              		.loc 1 208 3 view .LVU33
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****   }
 193              		.loc 1 210 3 view .LVU34
 208:Core/Src/main.c ****   while (1)
 194              		.loc 1 208 9 view .LVU35
 195 0002 FEE7     		b	.L19
 196              		.cfi_endproc
 197              	.LFE73:
 199              		.section	.text.SystemClock_Config,"ax",%progbits
 200              		.align	1
 201              		.global	SystemClock_Config
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	SystemClock_Config:
 207              	.LFB71:
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 208              		.loc 1 140 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 64
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212 0000 00B5     		push	{lr}
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 14, -4
 215 0002 91B0     		sub	sp, sp, #68
 216              		.cfi_def_cfa_offset 72
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 217              		.loc 1 141 3 view .LVU37
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 218              		.loc 1 141 22 is_stmt 0 view .LVU38
ARM GAS  /tmp/ccGHjvEO.s 			page 11


 219 0004 2822     		movs	r2, #40
 220 0006 0021     		movs	r1, #0
 221 0008 06A8     		add	r0, sp, #24
 222 000a FFF7FEFF 		bl	memset
 223              	.LVL8:
 142:Core/Src/main.c **** 
 224              		.loc 1 142 3 is_stmt 1 view .LVU39
 142:Core/Src/main.c **** 
 225              		.loc 1 142 22 is_stmt 0 view .LVU40
 226 000e 0023     		movs	r3, #0
 227 0010 0193     		str	r3, [sp, #4]
 228 0012 0293     		str	r3, [sp, #8]
 229 0014 0393     		str	r3, [sp, #12]
 230 0016 0493     		str	r3, [sp, #16]
 231 0018 0593     		str	r3, [sp, #20]
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 232              		.loc 1 147 3 is_stmt 1 view .LVU41
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 233              		.loc 1 147 36 is_stmt 0 view .LVU42
 234 001a 0122     		movs	r2, #1
 235 001c 0692     		str	r2, [sp, #24]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 236              		.loc 1 148 3 is_stmt 1 view .LVU43
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 237              		.loc 1 148 30 is_stmt 0 view .LVU44
 238 001e 4FF48033 		mov	r3, #65536
 239 0022 0793     		str	r3, [sp, #28]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 240              		.loc 1 149 3 is_stmt 1 view .LVU45
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 241              		.loc 1 150 3 view .LVU46
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 242              		.loc 1 150 30 is_stmt 0 view .LVU47
 243 0024 0A92     		str	r2, [sp, #40]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 244              		.loc 1 151 3 is_stmt 1 view .LVU48
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 245              		.loc 1 151 34 is_stmt 0 view .LVU49
 246 0026 0222     		movs	r2, #2
 247 0028 0D92     		str	r2, [sp, #52]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 248              		.loc 1 152 3 is_stmt 1 view .LVU50
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 249              		.loc 1 152 35 is_stmt 0 view .LVU51
 250 002a 0E93     		str	r3, [sp, #56]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 251              		.loc 1 153 3 is_stmt 1 view .LVU52
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 252              		.loc 1 153 32 is_stmt 0 view .LVU53
 253 002c 4FF4E013 		mov	r3, #1835008
 254 0030 0F93     		str	r3, [sp, #60]
 154:Core/Src/main.c ****   {
 255              		.loc 1 154 3 is_stmt 1 view .LVU54
 154:Core/Src/main.c ****   {
 256              		.loc 1 154 7 is_stmt 0 view .LVU55
 257 0032 06A8     		add	r0, sp, #24
 258 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccGHjvEO.s 			page 12


 259              	.LVL9:
 154:Core/Src/main.c ****   {
 260              		.loc 1 154 6 discriminator 1 view .LVU56
 261 0038 80B9     		cbnz	r0, .L24
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 262              		.loc 1 161 3 is_stmt 1 view .LVU57
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 263              		.loc 1 161 31 is_stmt 0 view .LVU58
 264 003a 0F23     		movs	r3, #15
 265 003c 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 266              		.loc 1 163 3 is_stmt 1 view .LVU59
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 267              		.loc 1 163 34 is_stmt 0 view .LVU60
 268 003e 0221     		movs	r1, #2
 269 0040 0291     		str	r1, [sp, #8]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 270              		.loc 1 164 3 is_stmt 1 view .LVU61
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 271              		.loc 1 164 35 is_stmt 0 view .LVU62
 272 0042 0023     		movs	r3, #0
 273 0044 0393     		str	r3, [sp, #12]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 274              		.loc 1 165 3 is_stmt 1 view .LVU63
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 275              		.loc 1 165 36 is_stmt 0 view .LVU64
 276 0046 4FF48062 		mov	r2, #1024
 277 004a 0492     		str	r2, [sp, #16]
 166:Core/Src/main.c **** 
 278              		.loc 1 166 3 is_stmt 1 view .LVU65
 166:Core/Src/main.c **** 
 279              		.loc 1 166 36 is_stmt 0 view .LVU66
 280 004c 0593     		str	r3, [sp, #20]
 168:Core/Src/main.c ****   {
 281              		.loc 1 168 3 is_stmt 1 view .LVU67
 168:Core/Src/main.c ****   {
 282              		.loc 1 168 7 is_stmt 0 view .LVU68
 283 004e 01A8     		add	r0, sp, #4
 284 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 285              	.LVL10:
 168:Core/Src/main.c ****   {
 286              		.loc 1 168 6 discriminator 1 view .LVU69
 287 0054 20B9     		cbnz	r0, .L25
 172:Core/Src/main.c **** 
 288              		.loc 1 172 1 view .LVU70
 289 0056 11B0     		add	sp, sp, #68
 290              		.cfi_remember_state
 291              		.cfi_def_cfa_offset 4
 292              		@ sp needed
 293 0058 5DF804FB 		ldr	pc, [sp], #4
 294              	.L24:
 295              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 296              		.loc 1 156 5 is_stmt 1 view .LVU71
 297 005c FFF7FEFF 		bl	Error_Handler
 298              	.LVL11:
 299              	.L25:
ARM GAS  /tmp/ccGHjvEO.s 			page 13


 170:Core/Src/main.c ****   }
 300              		.loc 1 170 5 view .LVU72
 301 0060 FFF7FEFF 		bl	Error_Handler
 302              	.LVL12:
 303              		.cfi_endproc
 304              	.LFE71:
 306              		.section	.text.main,"ax",%progbits
 307              		.align	1
 308              		.global	main
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	main:
 314              	.LFB70:
  85:Core/Src/main.c **** 
 315              		.loc 1 85 1 view -0
 316              		.cfi_startproc
 317              		@ Volatile: function does not return.
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320 0000 08B5     		push	{r3, lr}
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
  93:Core/Src/main.c **** 
 324              		.loc 1 93 3 view .LVU74
 325 0002 FFF7FEFF 		bl	HAL_Init
 326              	.LVL13:
 100:Core/Src/main.c **** 
 327              		.loc 1 100 3 view .LVU75
 328 0006 FFF7FEFF 		bl	SystemClock_Config
 329              	.LVL14:
 107:Core/Src/main.c ****   MX_CAN_Init();
 330              		.loc 1 107 3 view .LVU76
 331 000a FFF7FEFF 		bl	MX_GPIO_Init
 332              	.LVL15:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 333              		.loc 1 108 3 view .LVU77
 334 000e FFF7FEFF 		bl	MX_CAN_Init
 335              	.LVL16:
 114:Core/Src/main.c **** 
 336              		.loc 1 114 3 view .LVU78
 337 0012 FFF7FEFF 		bl	osKernelInitialize
 338              	.LVL17:
 117:Core/Src/main.c **** 
 339              		.loc 1 117 3 view .LVU79
 340 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 341              	.LVL18:
 120:Core/Src/main.c **** 
 342              		.loc 1 120 3 view .LVU80
 343 001a FFF7FEFF 		bl	osKernelStart
 344              	.LVL19:
 345              	.L27:
 126:Core/Src/main.c ****   {
 346              		.loc 1 126 3 view .LVU81
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 347              		.loc 1 131 3 view .LVU82
ARM GAS  /tmp/ccGHjvEO.s 			page 14


 126:Core/Src/main.c ****   {
 348              		.loc 1 126 9 view .LVU83
 349 001e FEE7     		b	.L27
 350              		.cfi_endproc
 351              	.LFE70:
 353              		.global	rpm_curr_itr
 354              		.section	.bss.rpm_curr_itr,"aw",%nobits
 355              		.align	2
 358              	rpm_curr_itr:
 359 0000 00000000 		.space	4
 360              		.global	rpm_last_itr
 361              		.section	.bss.rpm_last_itr,"aw",%nobits
 362              		.align	2
 365              	rpm_last_itr:
 366 0000 00000000 		.space	4
 367              		.global	rpm_counter
 368              		.section	.bss.rpm_counter,"aw",%nobits
 371              	rpm_counter:
 372 0000 00       		.space	1
 373              		.global	rpm_itr
 374              		.section	.bss.rpm_itr,"aw",%nobits
 375              		.align	2
 378              	rpm_itr:
 379 0000 00000000 		.space	16
 379      00000000 
 379      00000000 
 379      00000000 
 380              		.text
 381              	.Letext0:
 382              		.file 3 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 383              		.file 4 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 384              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 385              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 386              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 387              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 388              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 389              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 390              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 391              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 392              		.file 13 "Core/Inc/can.h"
 393              		.file 14 "Core/Inc/gpio.h"
 394              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 395              		.file 16 "<built-in>"
ARM GAS  /tmp/ccGHjvEO.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccGHjvEO.s:19     .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccGHjvEO.s:25     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccGHjvEO.s:107    .text.HAL_GPIO_EXTI_Callback:0000006c $d
     /tmp/ccGHjvEO.s:358    .bss.rpm_curr_itr:00000000 rpm_curr_itr
     /tmp/ccGHjvEO.s:371    .bss.rpm_counter:00000000 rpm_counter
     /tmp/ccGHjvEO.s:365    .bss.rpm_last_itr:00000000 rpm_last_itr
     /tmp/ccGHjvEO.s:378    .bss.rpm_itr:00000000 rpm_itr
     /tmp/ccGHjvEO.s:118    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccGHjvEO.s:124    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccGHjvEO.s:157    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/ccGHjvEO.s:162    .text.Error_Handler:00000000 $t
     /tmp/ccGHjvEO.s:168    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccGHjvEO.s:200    .text.SystemClock_Config:00000000 $t
     /tmp/ccGHjvEO.s:206    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccGHjvEO.s:307    .text.main:00000000 $t
     /tmp/ccGHjvEO.s:313    .text.main:00000000 main
     /tmp/ccGHjvEO.s:355    .bss.rpm_curr_itr:00000000 $d
     /tmp/ccGHjvEO.s:362    .bss.rpm_last_itr:00000000 $d
     /tmp/ccGHjvEO.s:372    .bss.rpm_counter:00000000 $d
     /tmp/ccGHjvEO.s:375    .bss.rpm_itr:00000000 $d

UNDEFINED SYMBOLS
osKernelGetTickCount
HAL_GPIO_TogglePin
osEventFlagsSet
itr_eventsHandle
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
