ARM GAS  /tmp/ccHqWj7l.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_TIM_PeriodElapsedCallback
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_TIM_PeriodElapsedCallback:
  26              	.LVL0:
  27              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccHqWj7l.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccHqWj7l.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_CAN_Init();
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Init scheduler */
  99:Core/Src/main.c ****   osKernelInitialize();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 102:Core/Src/main.c ****   MX_FREERTOS_Init();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Start scheduler */
 105:Core/Src/main.c ****   osKernelStart();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Infinite loop */
 110:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 111:Core/Src/main.c ****   while (1)
 112:Core/Src/main.c ****   {
 113:Core/Src/main.c ****     /* USER CODE END WHILE */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 116:Core/Src/main.c ****   }
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 118:Core/Src/main.c **** }
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /**
 121:Core/Src/main.c ****   * @brief System Clock Configuration
 122:Core/Src/main.c ****   * @retval None
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c **** void SystemClock_Config(void)
 125:Core/Src/main.c **** {
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 130:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/ccHqWj7l.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /* USER CODE END 4 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 165:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 166:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 167:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 168:Core/Src/main.c ****   * @param  htim : TIM handle
 169:Core/Src/main.c ****   * @retval None
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 172:Core/Src/main.c **** {
  28              		.loc 1 172 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 172 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 173:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 176:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  37              		.loc 1 176 3 is_stmt 1 view .LVU2
  38              		.loc 1 176 11 is_stmt 0 view .LVU3
  39 0002 0268     		ldr	r2, [r0]
  40              		.loc 1 176 6 view .LVU4
  41 0004 034B     		ldr	r3, .L5
  42 0006 9A42     		cmp	r2, r3
  43 0008 00D0     		beq	.L4
  44              	.LVL1:
  45              	.L1:
 177:Core/Src/main.c ****     HAL_IncTick();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 182:Core/Src/main.c **** }
  46              		.loc 1 182 1 view .LVU5
  47 000a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccHqWj7l.s 			page 5


  48              	.LVL2:
  49              	.L4:
 177:Core/Src/main.c ****     HAL_IncTick();
  50              		.loc 1 177 5 is_stmt 1 view .LVU6
  51 000c FFF7FEFF 		bl	HAL_IncTick
  52              	.LVL3:
  53              		.loc 1 182 1 is_stmt 0 view .LVU7
  54 0010 FBE7     		b	.L1
  55              	.L6:
  56 0012 00BF     		.align	2
  57              	.L5:
  58 0014 002C0140 		.word	1073818624
  59              		.cfi_endproc
  60              	.LFE71:
  62              		.section	.text.Error_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	Error_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	Error_Handler:
  70              	.LFB72:
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
  71              		.loc 1 189 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ Volatile: function does not return.
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 190:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 192:Core/Src/main.c ****   __disable_irq();
  77              		.loc 1 192 3 view .LVU9
  78              	.LBB4:
  79              	.LBI4:
  80              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccHqWj7l.s 			page 6


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccHqWj7l.s 			page 7


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/ccHqWj7l.s 			page 8


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  81              		.loc 2 140 27 view .LVU10
  82              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  83              		.loc 2 142 3 view .LVU11
  84              		.syntax unified
  85              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  86 0000 72B6     		cpsid i
  87              	@ 0 "" 2
  88              		.thumb
  89              		.syntax unified
  90              	.L8:
  91              	.LBE5:
  92              	.LBE4:
 193:Core/Src/main.c ****   while (1)
  93              		.loc 1 193 3 view .LVU12
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****   }
  94              		.loc 1 195 3 view .LVU13
 193:Core/Src/main.c ****   while (1)
  95              		.loc 1 193 9 view .LVU14
  96 0002 FEE7     		b	.L8
  97              		.cfi_endproc
  98              	.LFE72:
 100              		.section	.text.SystemClock_Config,"ax",%progbits
 101              		.align	1
 102              		.global	SystemClock_Config
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 107              	SystemClock_Config:
 108              	.LFB70:
 125:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 109              		.loc 1 125 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 64
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 00B5     		push	{lr}
 114              		.cfi_def_cfa_offset 4
 115              		.cfi_offset 14, -4
 116 0002 91B0     		sub	sp, sp, #68
 117              		.cfi_def_cfa_offset 72
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118              		.loc 1 126 3 view .LVU16
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 119              		.loc 1 126 22 is_stmt 0 view .LVU17
ARM GAS  /tmp/ccHqWj7l.s 			page 9


 120 0004 2822     		movs	r2, #40
 121 0006 0021     		movs	r1, #0
 122 0008 06A8     		add	r0, sp, #24
 123 000a FFF7FEFF 		bl	memset
 124              	.LVL4:
 127:Core/Src/main.c **** 
 125              		.loc 1 127 3 is_stmt 1 view .LVU18
 127:Core/Src/main.c **** 
 126              		.loc 1 127 22 is_stmt 0 view .LVU19
 127 000e 0023     		movs	r3, #0
 128 0010 0193     		str	r3, [sp, #4]
 129 0012 0293     		str	r3, [sp, #8]
 130 0014 0393     		str	r3, [sp, #12]
 131 0016 0493     		str	r3, [sp, #16]
 132 0018 0593     		str	r3, [sp, #20]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 133              		.loc 1 132 3 is_stmt 1 view .LVU20
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 134              		.loc 1 132 36 is_stmt 0 view .LVU21
 135 001a 0122     		movs	r2, #1
 136 001c 0692     		str	r2, [sp, #24]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 137              		.loc 1 133 3 is_stmt 1 view .LVU22
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 138              		.loc 1 133 30 is_stmt 0 view .LVU23
 139 001e 4FF48033 		mov	r3, #65536
 140 0022 0793     		str	r3, [sp, #28]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141              		.loc 1 134 3 is_stmt 1 view .LVU24
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142              		.loc 1 135 3 view .LVU25
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143              		.loc 1 135 30 is_stmt 0 view .LVU26
 144 0024 0A92     		str	r2, [sp, #40]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 145              		.loc 1 136 3 is_stmt 1 view .LVU27
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 146              		.loc 1 136 34 is_stmt 0 view .LVU28
 147 0026 0222     		movs	r2, #2
 148 0028 0D92     		str	r2, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 149              		.loc 1 137 3 is_stmt 1 view .LVU29
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 150              		.loc 1 137 35 is_stmt 0 view .LVU30
 151 002a 0E93     		str	r3, [sp, #56]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 152              		.loc 1 138 3 is_stmt 1 view .LVU31
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153              		.loc 1 138 32 is_stmt 0 view .LVU32
 154 002c 4FF4E013 		mov	r3, #1835008
 155 0030 0F93     		str	r3, [sp, #60]
 139:Core/Src/main.c ****   {
 156              		.loc 1 139 3 is_stmt 1 view .LVU33
 139:Core/Src/main.c ****   {
 157              		.loc 1 139 7 is_stmt 0 view .LVU34
 158 0032 06A8     		add	r0, sp, #24
 159 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccHqWj7l.s 			page 10


 160              	.LVL5:
 139:Core/Src/main.c ****   {
 161              		.loc 1 139 6 discriminator 1 view .LVU35
 162 0038 80B9     		cbnz	r0, .L13
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163              		.loc 1 146 3 is_stmt 1 view .LVU36
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 164              		.loc 1 146 31 is_stmt 0 view .LVU37
 165 003a 0F23     		movs	r3, #15
 166 003c 0193     		str	r3, [sp, #4]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167              		.loc 1 148 3 is_stmt 1 view .LVU38
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168              		.loc 1 148 34 is_stmt 0 view .LVU39
 169 003e 0221     		movs	r1, #2
 170 0040 0291     		str	r1, [sp, #8]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 171              		.loc 1 149 3 is_stmt 1 view .LVU40
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 172              		.loc 1 149 35 is_stmt 0 view .LVU41
 173 0042 0023     		movs	r3, #0
 174 0044 0393     		str	r3, [sp, #12]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 175              		.loc 1 150 3 is_stmt 1 view .LVU42
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 176              		.loc 1 150 36 is_stmt 0 view .LVU43
 177 0046 4FF48062 		mov	r2, #1024
 178 004a 0492     		str	r2, [sp, #16]
 151:Core/Src/main.c **** 
 179              		.loc 1 151 3 is_stmt 1 view .LVU44
 151:Core/Src/main.c **** 
 180              		.loc 1 151 36 is_stmt 0 view .LVU45
 181 004c 0593     		str	r3, [sp, #20]
 153:Core/Src/main.c ****   {
 182              		.loc 1 153 3 is_stmt 1 view .LVU46
 153:Core/Src/main.c ****   {
 183              		.loc 1 153 7 is_stmt 0 view .LVU47
 184 004e 01A8     		add	r0, sp, #4
 185 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 186              	.LVL6:
 153:Core/Src/main.c ****   {
 187              		.loc 1 153 6 discriminator 1 view .LVU48
 188 0054 20B9     		cbnz	r0, .L14
 157:Core/Src/main.c **** 
 189              		.loc 1 157 1 view .LVU49
 190 0056 11B0     		add	sp, sp, #68
 191              		.cfi_remember_state
 192              		.cfi_def_cfa_offset 4
 193              		@ sp needed
 194 0058 5DF804FB 		ldr	pc, [sp], #4
 195              	.L13:
 196              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 197              		.loc 1 141 5 is_stmt 1 view .LVU50
 198 005c FFF7FEFF 		bl	Error_Handler
 199              	.LVL7:
 200              	.L14:
ARM GAS  /tmp/ccHqWj7l.s 			page 11


 155:Core/Src/main.c ****   }
 201              		.loc 1 155 5 view .LVU51
 202 0060 FFF7FEFF 		bl	Error_Handler
 203              	.LVL8:
 204              		.cfi_endproc
 205              	.LFE70:
 207              		.section	.text.main,"ax",%progbits
 208              		.align	1
 209              		.global	main
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	main:
 215              	.LFB69:
  69:Core/Src/main.c **** 
 216              		.loc 1 69 1 view -0
 217              		.cfi_startproc
 218              		@ Volatile: function does not return.
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 08B5     		push	{r3, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 225              		.loc 1 78 3 view .LVU53
 226 0002 FFF7FEFF 		bl	HAL_Init
 227              	.LVL9:
  85:Core/Src/main.c **** 
 228              		.loc 1 85 3 view .LVU54
 229 0006 FFF7FEFF 		bl	SystemClock_Config
 230              	.LVL10:
  92:Core/Src/main.c ****   MX_CAN_Init();
 231              		.loc 1 92 3 view .LVU55
 232 000a FFF7FEFF 		bl	MX_GPIO_Init
 233              	.LVL11:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 234              		.loc 1 93 3 view .LVU56
 235 000e FFF7FEFF 		bl	MX_CAN_Init
 236              	.LVL12:
  99:Core/Src/main.c **** 
 237              		.loc 1 99 3 view .LVU57
 238 0012 FFF7FEFF 		bl	osKernelInitialize
 239              	.LVL13:
 102:Core/Src/main.c **** 
 240              		.loc 1 102 3 view .LVU58
 241 0016 FFF7FEFF 		bl	MX_FREERTOS_Init
 242              	.LVL14:
 105:Core/Src/main.c **** 
 243              		.loc 1 105 3 view .LVU59
 244 001a FFF7FEFF 		bl	osKernelStart
 245              	.LVL15:
 246              	.L16:
 111:Core/Src/main.c ****   {
 247              		.loc 1 111 3 view .LVU60
 116:Core/Src/main.c ****   /* USER CODE END 3 */
 248              		.loc 1 116 3 view .LVU61
ARM GAS  /tmp/ccHqWj7l.s 			page 12


 111:Core/Src/main.c ****   {
 249              		.loc 1 111 9 view .LVU62
 250 001e FEE7     		b	.L16
 251              		.cfi_endproc
 252              	.LFE69:
 254              		.text
 255              	.Letext0:
 256              		.file 3 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 257              		.file 4 "/home/lorolol/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 258              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 259              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 260              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 261              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 262              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 263              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 264              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 265              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 266              		.file 13 "Core/Inc/can.h"
 267              		.file 14 "Core/Inc/gpio.h"
 268              		.file 15 "<built-in>"
ARM GAS  /tmp/ccHqWj7l.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccHqWj7l.s:19     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccHqWj7l.s:25     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccHqWj7l.s:58     .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
     /tmp/ccHqWj7l.s:63     .text.Error_Handler:00000000 $t
     /tmp/ccHqWj7l.s:69     .text.Error_Handler:00000000 Error_Handler
     /tmp/ccHqWj7l.s:101    .text.SystemClock_Config:00000000 $t
     /tmp/ccHqWj7l.s:107    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccHqWj7l.s:208    .text.main:00000000 $t
     /tmp/ccHqWj7l.s:214    .text.main:00000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
